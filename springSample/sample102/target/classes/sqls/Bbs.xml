<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Bbs">
<!-- 
<select id="bbslist" resultType="bit.com.a.dto.BbsDto">
	SELECT *
	FROM BBS
	ORDER BY REF DESC, STEP ASC
</select>
 -->
 
<select id="bbslist" parameterType="bit.com.a.dto.BbsParam" 
	resultType="bit.com.a.dto.BbsDto">
	SELECT SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT
	FROM (SELECT ROW_NUMBER()OVER(ORDER BY REF DESC, STEP ASC) AS RNUM,
			SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT
		  FROM BBS
		  WHERE 1=1
		  <if test="choice != null and choice != ''
		  		and search != null and search != ''">
		  	  <!-- AND DEL=0 -->		
			  <if test="choice == 'title'">
			  		AND TITLE LIKE '%'||#{search}||'%'		  
			  </if>
			  <if test="choice == 'content'">
			  		AND CONTENT LIKE '%'||#{search}||'%'			  
			  </if>
			  <if test="choice == 'writer'">
			  		AND ID=#{search}  
			  </if>	
		  </if>
		ORDER BY REF DESC, STEP ASC)
	WHERE RNUM BETWEEN ${start} AND ${end}
</select> 
 
<!-- 글의 총수 --> 
<select id="getBbsCount" parameterType="bit.com.a.dto.BbsParam"
	resultType="java.lang.Integer">
	SELECT NVL(COUNT(*), 0)
	FROM BBS
	WHERE 1=1
	<if test="choice != null and choice != ''
	  		and search != null and search != ''">	  	  		
		  <if test="choice == 'title'">
		  		AND TITLE LIKE '%'||#{search}||'%'		  
		  </if>
		  <if test="choice == 'content'">
		  		AND CONTENT LIKE '%'||#{search}||'%'			  
		  </if>
		  <if test="choice == 'writer'">
		  		AND ID=#{search}  
		  </if>	
	  </if>
</select>

<select id="bbsdetail" parameterType="java.lang.Integer" resultType="bit.com.a.dto.BbsDto">
 SELECT SEQ, ID, REF, STEP, DEPTH, 
		TITLE, CONTENT, WDATE,
		DEL, READCOUNT 
		FROM BBS 
		WHERE SEQ=#{seq} 

 </select>
 
  <select id="getBbsDetail" parameterType="int" resultType="bit.com.a.dto.BbsDto">
  SELECT SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT FROM BBS WHERE SEQ = ${seq}
  </select>
  
	<update id="bbsupdate" parameterType="bit.com.a.dto.BbsDto">
	UPDATE BBS SET TITLE=#{title}, CONTENT=#{content} WHERE SEQ=${seq}
	</update>	
	
	<update id="bbsdelete" parameterType="int">
	UPDATE BBS SET DEL=1 WHERE SEQ=${seq}
	</update>
	
	<update id="bbsStepIncrease" parameterType="int">
	UPDATE BBS SET STEP=STEP+1 WHERE REF=(SELECT REF FROM BBS WHERE SEQ=${seq}) 
	AND STEP>(SELECT STEP FROM BBS WHERE SEQ=${seq})
	</update>
	
	<insert id="add" parameterType="bit.com.a.dto.BbsDto">
			INSERT INTO BBS( SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT )
			VALUES(SEQ_BBS.NEXTVAL, #{ id }, (SELECT NVL(MAX(REF), 0)+1 FROM BBS), 0, 0, 
			#{ title }, #{ content }, SYSDATE, 0, 0 )	
	  </insert>
	  
	<insert id="bbsanswer" parameterType="bit.com.a.dto.BbsDto">
	INSERT INTO BBS( SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, WDATE, DEL, READCOUNT )
	VALUES(SEQ_BBS.NEXTVAL, #{id}, (SELECT REF FROM BBS WHERE SEQ=${seq}), (SELECT STEP FROM BBS WHERE SEQ=${seq}) + 1,
	(SELECT DEPTH FROM BBS WHERE SEQ=${seq}) + 1, #{title}, #{content}, SYSDATE, 0, 0)
	</insert>
	
	<update id="readcount" parameterType="int">
	UPDATE BBS SET READCOUNT=READCOUNT+1 
				 WHERE SEQ=${seq}
	</update>
</mapper>
